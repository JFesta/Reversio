//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reversio.Core {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Queries {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Queries() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Reversio.Core.Queries", typeof(Queries).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT  C.[TABLE_SCHEMA] AS [Schema],
        ///        C.[TABLE_NAME] AS [TableName],
        ///        C.[COLUMN_NAME] AS [Name],
        ///        C.[ORDINAL_POSITION] AS [Position],
        ///        C.[COLUMN_DEFAULT] AS [Default],
        ///		(CASE WHEN COLUMNPROPERTY(OBJECT_ID([TABLE_SCHEMA] + &apos;.&apos; + [TABLE_NAME]), [COLUMN_NAME], &apos;IsIdentity&apos;) = 1 THEN 1 ELSE 0 END) AS [IsIdentity],
        ///        (CASE WHEN C.[IS_NULLABLE] = &apos;YES&apos; THEN 1 ELSE 0 END) AS [IsNullable],
        ///        LOWER(C.[DATA_TYPE]) AS [DataType],
        ///        C.[CHARACTER_MAXIMUM_LENGTH] AS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string COLUMNS_SELECT {
            get {
                return ResourceManager.GetString("COLUMNS_SELECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT
        ///    FK.[CONSTRAINT_NAME] AS [Name],
        ///	FK.[ORDINAL_POSITION] AS [Position],
        ///	FK.[TABLE_SCHEMA] AS [FkSchema],
        ///    FK.[TABLE_NAME] AS [FkTable],
        ///    FK.[COLUMN_NAME] AS [FkColumn],
        ///	PK.[TABLE_SCHEMA] AS [PkSchema],
        ///    PK.[TABLE_NAME] AS [PkTable],
        ///    PK.[COLUMN_NAME] AS [PkColumn],
        ///    CASE WHEN C.[DELETE_RULE] = &apos;CASCADE&apos; THEN 1 ELSE 0 END AS [DeleteCascade]
        ///FROM
        ///	INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS C
        ///    INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS FK 
        ///		ON FK.CO [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string COLUMNS_SELECT_BY_TABLE {
            get {
                return ResourceManager.GetString("COLUMNS_SELECT_BY_TABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT
        ///    C.CONSTRAINT_SCHEMA AS [Schema],
        ///    C.[CONSTRAINT_NAME] AS [Name],
        ///	FK.[ORDINAL_POSITION] AS [Position],
        ///	FK.[TABLE_SCHEMA] AS [FkSchemaName],
        ///    FK.[TABLE_NAME] AS [FkTableName],
        ///    FK.[COLUMN_NAME] AS [FkColumnName],
        ///	PK.[TABLE_SCHEMA] AS [PkSchemaName],
        ///    PK.[TABLE_NAME] AS [PkTableName],
        ///    PK.[COLUMN_NAME] AS [PkColumnName]
        ///FROM
        ///	INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS C
        ///    INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS FK 
        ///		ON FK.CONSTRAINT_NAME = C.CO [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FOREIGN_KEY_COLUMNS_SELECT {
            get {
                return ResourceManager.GetString("FOREIGN_KEY_COLUMNS_SELECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT
        ///    C.CONSTRAINT_SCHEMA AS [Schema],
        ///    C.[CONSTRAINT_NAME] AS [Name],
        ///	FK.[TABLE_SCHEMA] AS [FkSchemaName],
        ///    FK.[TABLE_NAME] AS [FkTableName],
        ///	PK.[TABLE_SCHEMA] AS [PkSchemaName],
        ///    PK.[TABLE_NAME] AS [PkTableName]
        ///FROM
        ///	INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS C
        ///    INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS FK 
        ///		ON FK.CONSTRAINT_NAME = C.CONSTRAINT_NAME
        ///    INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS PK
        ///        ON PK.CONSTRAINT_NAME = C.UNIQUE_CONSTRA [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FOREIGN_KEYS_SELECT {
            get {
                return ResourceManager.GetString("FOREIGN_KEYS_SELECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT
        ///	IND.[name] AS IndexName,
        ///	SCHEMA_NAME(T.SCHEMA_ID) AS TableSchema,
        ///    T.[name] AS TableName,
        ///    IC.[key_ordinal] AS Position,
        ///    COL.[name] AS ColumnName
        ///FROM sys.tables T
        ///INNER JOIN sys.indexes IND
        ///    ON IND.object_id = T.object_id
        ///INNER JOIN sys.index_columns IC
        ///    ON IND.object_id = IC.object_id AND IND.index_id = IC.index_id
        ///INNER JOIN sys.columns COL
        ///    ON ic.object_id = COL.object_id AND IC.column_id = COL.column_id
        ///WHERE T.[is_ms_shipped] = 0
        ///    AND IND.[ignore_d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string INDEX_COLUMNS_SELECT {
            get {
                return ResourceManager.GetString("INDEX_COLUMNS_SELECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT
        ///	IND.[name] AS IndexName,
        ///	SCHEMA_NAME(T.SCHEMA_ID) AS TableSchema,
        ///    T.[name] AS TableName,
        ///    IND.[is_unique] AS IsUnique,
        ///    IND.[is_primary_key] AS IsPrimaryKey,
        ///    IND.[is_unique_constraint] AS IsUniqueConstraint
        ///FROM sys.tables T
        ///INNER JOIN sys.indexes IND
        ///    ON IND.object_id = T.object_id
        ///WHERE T.[is_ms_shipped] = 0
        ///    AND IND.[ignore_dup_key] = 0
        ///    AND T.[name] NOT LIKE &apos;sysdiagram%&apos;.
        /// </summary>
        internal static string INDICES_SELECT {
            get {
                return ResourceManager.GetString("INDICES_SELECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT  C.TABLE_SCHEMA AS &apos;Schema&apos;,
        ///        C.TABLE_NAME AS &apos;TableName&apos;,
        ///        C.COLUMN_NAME AS &apos;Name&apos;,
        ///        C.ORDINAL_POSITION AS &apos;Position&apos;,
        ///        C.COLUMN_DEFAULT AS &apos;Default&apos;,
        ///        0 as &apos;IsIdentity&apos;,
        ///		(CASE WHEN C.IS_NULLABLE = &apos;YES&apos; THEN 1 ELSE 0 END) AS &apos;IsNullable&apos;,
        ///        LOWER(C.DATA_TYPE) AS &apos;DataType&apos;,
        ///        C.CHARACTER_MAXIMUM_LENGTH AS &apos;CharacterMaximumLength&apos;,
        ///        C.NUMERIC_PRECISION AS &apos;NumericPrecision&apos;,
        ///        C.NUMERIC_SCALE AS &apos;NumericScale&apos;,
        ///        C.DATETIME_PRECISIO [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MYSQL_COLUMNS_SELECT {
            get {
                return ResourceManager.GetString("MYSQL_COLUMNS_SELECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT
        ///    C.CONSTRAINT_SCHEMA AS &apos;Schema&apos;,
        ///    C.CONSTRAINT_NAME AS &apos;Name&apos;,
        ///	FK.TABLE_SCHEMA AS &apos;FkSchemaName&apos;,
        ///    FK.TABLE_NAME AS &apos;FkTableName&apos;,
        ///	PK.TABLE_SCHEMA AS &apos;PkSchemaName&apos;,
        ///    PK.TABLE_NAME AS &apos;PkTableName&apos;
        ///FROM
        ///	INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS C
        ///    INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS FK 
        ///		ON FK.CONSTRAINT_NAME = C.CONSTRAINT_NAME
        ///    INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS PK
        ///        ON PK.CONSTRAINT_NAME = C.UNIQUE_CONSTRAINT_NAME
        ///		AND PK.ORDI [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MYSQL_FOREIGN_KEYS_SELECT {
            get {
                return ResourceManager.GetString("MYSQL_FOREIGN_KEYS_SELECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	TABLE_CATALOG AS &apos;Catalog&apos;,
        ///	TABLE_SCHEMA AS &apos;Schema&apos;,
        ///	TABLE_NAME AS &apos;Name&apos;,
        ///	TABLE_TYPE AS &apos;Type&apos;
        ///FROM INFORMATION_SCHEMA.TABLES
        ///WHERE TABLE_SCHEMA NOT IN (&apos;sys&apos;, &apos;performance_schema&apos;, &apos;mysql&apos;, &apos;information_schema&apos;).
        /// </summary>
        internal static string MYSQL_TABLES_SELECT {
            get {
                return ResourceManager.GetString("MYSQL_TABLES_SELECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	[TABLE_CATALOG] AS [Catalog],
        ///	[TABLE_SCHEMA] AS [Schema],
        ///	[TABLE_NAME] AS [Name],
        ///	[TABLE_TYPE] AS [Type]
        ///FROM INFORMATION_SCHEMA.TABLES
        ///WHERE [TABLE_NAME] NOT IN (&apos;EdmMetadata&apos;, &apos;__MigrationHistory&apos;, &apos;__RefactorLog&apos;)
        ///AND [TABLE_NAME] NOT LIKE &apos;sysdiagram%&apos;.
        /// </summary>
        internal static string TABLES_SELECT {
            get {
                return ResourceManager.GetString("TABLES_SELECT", resourceCulture);
            }
        }
    }
}
